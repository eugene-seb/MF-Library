# Execute on every push or PR to dev

name: Push or PR to dev

# This pipeline runs everytime there is a PR or push on dev.
# Because the changes on the submodules are track on their own GitHub project,
# I intentionally don't listen to the changes of each submodule in order to trigger this pipeline.

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  #-----------------------------------------------------------------------
  #--- Test user-service
  #-----------------------------------------------------------------------
  test-user-service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the submodule user-service
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run the user-service tests
        run: |
          chmod +x ./submodules/user-service/mvnw
          ./submodules/user-service/mvnw -f ./submodules/user-service/pom.xml clean test

  #-----------------------------------------------------------------------
  #--- Test book-service
  #-----------------------------------------------------------------------
  test-book-service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the submodule book-service
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run the book-service tests
        run: |
          chmod +x ./submodules/book-service/mvnw
          ./submodules/book-service/mvnw -f ./submodules/book-service/pom.xml clean test

  #-----------------------------------------------------------------------
  #--- Test review-service
  #-----------------------------------------------------------------------
  test-review-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the submodule review-service
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run the review-service tests
        run: |
          chmod +x ./submodules/review-service/mvnw
          ./submodules/review-service/mvnw -f ./submodules/review-service/pom.xml clean test

  #-----------------------------------------------------------------------
  #--- Test registry-service
  #-----------------------------------------------------------------------
  test-registry-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the submodule registry-service
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run the registry-service tests
        run: |
          chmod +x ./submodules/registry-service/mvnw
          ./submodules/registry-service/mvnw -f ./submodules/registry-service/pom.xml clean test

  #-----------------------------------------------------------------------
  #--- Test api-gateway
  #-----------------------------------------------------------------------
  test-api-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the submodule api-gateway
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run the api-gateway tests
        run: |
          chmod +x ./submodules/api-gateway/mvnw
          ./submodules/api-gateway/mvnw -f ./submodules/api-gateway/pom.xml clean test

  #-----------------------------------------------------------------------
  #--- Test mflibrary-frontend
  #-----------------------------------------------------------------------
  test-mflibrary-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci
        working-directory: ./mflibrary-frontend

      - name: Install Chrome
        run: sudo apt-get update && sudo apt-get install -y google-chrome-stable

      - name: Run frontend tests
        run: npx ng test --watch=false --browsers=ChromeHeadless
        working-directory: ./mflibrary-frontend
